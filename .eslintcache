[{"/home/ubuntu/environment/tutorial-facebook-api-login/src/index.js":"1","/home/ubuntu/environment/tutorial-facebook-api-login/src/App.js":"2","/home/ubuntu/environment/tutorial-facebook-api-login/src/reportWebVitals.js":"3","/home/ubuntu/environment/tutorial-facebook-api-login/src/FacebookSDK.js":"4"},{"size":622,"mtime":1610586651172,"results":"5","hashOfConfig":"6"},{"size":2267,"mtime":1610588897434,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1610508737708,"results":"8","hashOfConfig":"6"},{"size":1454,"mtime":1610589118725,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1xe1p8g",{"filePath":"13","messages":"14","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/environment/tutorial-facebook-api-login/src/index.js",[],["20","21"],"/home/ubuntu/environment/tutorial-facebook-api-login/src/App.js",["22","23","24","25","26"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport { authenticate } from './FacebookSDK';\n\nconst App = () => { \n  const [fbId, setFbId]= useState();\n  const [displayName, setDisplayName] = useState();\n  const [imageUrl, setImageUrl] = useState();\n  const [imageHeight, setImageHeight] = useState();\n  const [imageWidth, setImageWidth] = useState();\n  const [loggedIn, setLoggedIn] = useState(false);\n  \n  const processAuthResponse = async (authResponse) => {\n      const { accessToken } = authResponse;\n      const authenticateResponse = await authenticate(accessToken);\n      const { data } = authenticateResponse;\n      const { name, id, picture } = data;\n     \n      setFbId(id);\n      setDisplayName(name);\n      setImageUrl(picture.data.url);\n      setLoggedIn(true);\n    \n  }\n  \n  const fbLogin = () => {\n    (async () => {\n      const { authResponse } = await new Promise(window.FB.login);\n      await processAuthResponse(authResponse);\n    })();\n  };\n  \n  const fbLogout = () => {\n    (async () => {\n      await window.FB.logout();\n      setLoggedIn(false);\n    })();\n  }\n  \n  useEffect(() => {\n      // auto authenticate with the api if already logged in with facebook\n      window.FB.getLoginStatus(({ authResponse }) => {\n        (async () => {\n            if (authResponse) {\n                await processAuthResponse(authResponse);\n            } else {\n                setLoggedIn(false);\n            }\n            \n        })();\n      });\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        \n        { loggedIn &&\n          <div>\n            <div className='fb-login-form'>\n              <img className='fb-image' src={imageUrl} />\n              <div>ID: {fbId || '-'} </div>\n              <div>Display Name: {displayName || '-'} </div>\n            </div>\n            <button className=\"btn-facebook\" onClick={fbLogout}>Logout</button>\n          </div>\n        }\n        \n        {!loggedIn &&\n          <div>\n            <button className=\"btn-facebook\" onClick={fbLogin}>Login with Facebook</button>\n          </div>\n        }\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ubuntu/environment/tutorial-facebook-api-login/src/reportWebVitals.js",[],"/home/ubuntu/environment/tutorial-facebook-api-login/src/FacebookSDK.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":10,"column":10,"nodeType":"33","messageId":"34","endLine":10,"endColumn":21},{"ruleId":"31","severity":1,"message":"35","line":10,"column":23,"nodeType":"33","messageId":"34","endLine":10,"endColumn":37},{"ruleId":"31","severity":1,"message":"36","line":11,"column":10,"nodeType":"33","messageId":"34","endLine":11,"endColumn":20},{"ruleId":"31","severity":1,"message":"37","line":11,"column":22,"nodeType":"33","messageId":"34","endLine":11,"endColumn":35},{"ruleId":"38","severity":1,"message":"39","line":63,"column":15,"nodeType":"40","endLine":63,"endColumn":58},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'imageHeight' is assigned a value but never used.","Identifier","unusedVar","'setImageHeight' is assigned a value but never used.","'imageWidth' is assigned a value but never used.","'setImageWidth' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]